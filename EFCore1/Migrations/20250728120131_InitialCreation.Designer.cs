// <auto-generated />
using EFCore1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCore1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250728120131_InitialCreation")]
    partial class InitialCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("EFCore1.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = -2,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = -3,
                            Name = "RPG"
                        },
                        new
                        {
                            Id = -4,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = -5,
                            Name = "Sports"
                        });
                });

            modelBuilder.Entity("EFCore1.Entities.CategoryGame", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoryId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("CategoryGames");

                    b.HasData(
                        new
                        {
                            CategoryId = -1,
                            GameId = -1
                        },
                        new
                        {
                            CategoryId = -2,
                            GameId = -2
                        },
                        new
                        {
                            CategoryId = -3,
                            GameId = -3
                        },
                        new
                        {
                            CategoryId = -4,
                            GameId = -4
                        },
                        new
                        {
                            CategoryId = -5,
                            GameId = -5
                        },
                        new
                        {
                            CategoryId = -1,
                            GameId = -6
                        },
                        new
                        {
                            CategoryId = -2,
                            GameId = -7
                        },
                        new
                        {
                            CategoryId = -3,
                            GameId = -8
                        },
                        new
                        {
                            CategoryId = -4,
                            GameId = -9
                        },
                        new
                        {
                            CategoryId = -5,
                            GameId = -10
                        });
                });

            modelBuilder.Entity("EFCore1.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("PublisherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "The Witcher 3: Wild Hunt",
                            Price = 29.989999999999998,
                            PublisherId = -1
                        },
                        new
                        {
                            Id = -2,
                            Name = "Cyberpunk 2077",
                            Price = 39.990000000000002,
                            PublisherId = -1
                        },
                        new
                        {
                            Id = -3,
                            Name = "Red Dead Redemption 2",
                            Price = 59.990000000000002,
                            PublisherId = -2
                        },
                        new
                        {
                            Id = -4,
                            Name = "Elden Ring",
                            Price = 49.990000000000002,
                            PublisherId = -3
                        },
                        new
                        {
                            Id = -5,
                            Name = "God of War: Ragnarök",
                            Price = 69.989999999999995,
                            PublisherId = -4
                        },
                        new
                        {
                            Id = -6,
                            Name = "Horizon Forbidden West",
                            Price = 49.990000000000002,
                            PublisherId = -4
                        },
                        new
                        {
                            Id = -7,
                            Name = "Starfield",
                            Price = 59.990000000000002,
                            PublisherId = -5
                        },
                        new
                        {
                            Id = -8,
                            Name = "The Legend of Zelda: Tears of the Kingdom",
                            Price = 59.990000000000002,
                            PublisherId = -6
                        },
                        new
                        {
                            Id = -9,
                            Name = "Final Fantasy XVI",
                            Price = 69.989999999999995,
                            PublisherId = -7
                        },
                        new
                        {
                            Id = -10,
                            Name = "Resident Evil 4 Remake",
                            Price = 49.990000000000002,
                            PublisherId = -8
                        });
                });

            modelBuilder.Entity("EFCore1.Entities.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Electronic Arts"
                        },
                        new
                        {
                            Id = -2,
                            Name = "Ubisoft"
                        },
                        new
                        {
                            Id = -3,
                            Name = "Activision Blizzard"
                        },
                        new
                        {
                            Id = -4,
                            Name = "Nintendo"
                        },
                        new
                        {
                            Id = -5,
                            Name = "Sony Interactive Entertainment"
                        },
                        new
                        {
                            Id = -6,
                            Name = "Microsoft Gaming"
                        },
                        new
                        {
                            Id = -7,
                            Name = "Square Enix"
                        },
                        new
                        {
                            Id = -8,
                            Name = "Bandai Namco"
                        },
                        new
                        {
                            Id = -9,
                            Name = "Sega"
                        },
                        new
                        {
                            Id = -10,
                            Name = "Capcom"
                        });
                });

            modelBuilder.Entity("EFCore1.Entities.CategoryGame", b =>
                {
                    b.HasOne("EFCore1.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCore1.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("EFCore1.Entities.Game", b =>
                {
                    b.HasOne("EFCore1.Entities.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("EFCore1.Entities.Publisher", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
